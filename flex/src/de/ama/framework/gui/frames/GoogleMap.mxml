<?xml version="1.0" ?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="200"
	xmlns:maps="com.google.maps.*"
	cornerRadius="6" borderStyle="solid" borderColor="#248ED8" >
  <mx:Script><![CDATA[
      import com.google.maps.InfoWindowOptions;
      import com.google.maps.LatLng;
      import com.google.maps.MapMouseEvent;
      import com.google.maps.controls.MapTypeControl;
      import com.google.maps.controls.ZoomControl;
      import com.google.maps.overlays.Marker;
      import com.google.maps.overlays.MarkerOptions;
      import com.google.maps.services.ClientGeocoder;
      import com.google.maps.services.GeocodingEvent;

      import de.ama.framework.gui.fields.EditField;
      import de.ama.framework.util.Util;

      private var finished:Boolean = false;
      public var silent:Boolean = true;

      private var _countryField:EditField;
      private var _cityField:EditField;
      private var _streetField:EditField;
      private var _zipField:EditField;

      public function set countryField(value:EditField):void {
          _countryField = value;
      }

      public function set cityField(value:EditField):void {
          _cityField = value;
      }

      public function set streetField(value:EditField):void {
          _streetField = value;
      }

      public function set zipField(value:EditField):void {
          _zipField = value;
      }

      public static function create(x :int, y:int, w:int, h:int):GoogleMap {
          var map:GoogleMap = new GoogleMap();
          map = new GoogleMap();
          map.x = x;
          map.y = y;
          map.height = h;
          map.width = w;
          return map;
      }

      private function onMapReady(event:Event):void {
          map.enableScrollWheelZoom();
          map.enableContinuousZoom();
          map.addControl(new ZoomControl());
          map.addControl(new MapTypeControl());
          map.addEventListener(MapMouseEvent.CLICK, onMapClick);
      }

      private function onMapClick(event:MapMouseEvent):void {
          doGeocode(event.latLng);
          finished = true;
      }

      private function doGeocode(latlng:LatLng = null):void {
          var geocoder:ClientGeocoder = new ClientGeocoder();
          geocoder.addEventListener(
                  GeocodingEvent.GEOCODING_SUCCESS,
                  function(event:GeocodingEvent):void {
                      var placemarks:Array = event.response.placemarks;
                      if (placemarks.length > 0) {
                          map.clearOverlays();
                          map.setCenter(placemarks[0].point);
                          var marker:Marker = new Marker(placemarks[0].point, new MarkerOptions({draggable: true}));

                          if (placemarks[0].address != null) {
                              var address:String = placemarks[0].address;
                              var arr:Array = address.split(",");
                              if (arr.length > 0)  _streetField.setInputText(arr[0]);
                              if (arr.length > 1) {
                                  var city:String = arr[1];
                                  var array:Array = city.split(" ");
                                  if(array!=null && array.length>1){
                                      _zipField.setInputText(array[0]);
                                      _cityField.setInputText(array[1]);
                                  } else {
                                      _cityField.setInputText(city);
                                  }
                              }
                              if (arr.length > 2)  _countryField.setInputText(arr[2]);
                          }

                          marker.addEventListener(MapMouseEvent.CLICK, function (event:MapMouseEvent):void {
                              marker.openInfoWindow(new InfoWindowOptions({content: placemarks[0].address}));
                          });

                          marker.addEventListener(MapMouseEvent.DRAG_END, function(event:Event):void {
                              geocoder.reverseGeocode(marker.getLatLng());
                          });

                          map.addOverlay(marker);
                      }
                  });
          geocoder.addEventListener(
                  GeocodingEvent.GEOCODING_FAILURE,
                  function(event:GeocodingEvent):void {
                      if (!silent) {
                          Util.showMessage("Dieser Ort ist nicht verzeichnet");
                      }
                      finished = false;
                  });

          if (latlng != null) {
              geocoder.reverseGeocode(latlng);
          } else {
              var zoom:Number = 5;
              var addr:String = "Deutschland";
              if (_countryField!=null && !_countryField.isEmpty()) {
                  addr = _countryField.getInputText();
                  zoom = 5;
              }
              if (_cityField!=null && !_cityField.isEmpty()) {
                  addr += "," + _cityField.getInputText();
                  zoom = 11;
              }
              if (_streetField!=null && !_streetField.isEmpty()) {
                  addr += "," + _streetField.getInputText();
                  zoom = 11;
              }
              if (_zipField!=null && !_zipField.isEmpty()) {
                  addr += "," + _zipField.getInputText();
                  zoom = 11;
              }
              geocoder.geocode(addr);
              map.setZoom(zoom);
          }
      }


      ]]></mx:Script>
  


    <maps:Map id="map"  key="ABQIAAAAK7AsHxY1HCEEhqzGfPOq4RQNBUbHWORdu9BffY4TAGVewGMWjBQEc7BLYXOpOkze1XGxFxU9NFB8aA" 
        mapevent_mapready="onMapReady(event)" width="100%" height="100%" language="de"/>

</mx:Canvas>