<?xml version="1.0" encoding="UTF-8"?>
<project name="server" default="build.all">


    <property file="build.properties" />

    <property name="deploy.dir" value="${home.dir}/server/webapp"/>
    <property name="root_package" value="praxis"/>

    <target name="server.compile.environment" >
         <delete dir="server/classes" failonerror="false"/>
         <delete dir="server/src/${root_package}" failonerror="false"/>
         <mkdir dir="server/classes" />
        <javac destdir="server/classes" debug="on"  encoding="UTF-8">
            <src path="server/src"/>
            <classpath>
                <fileset dir="server/lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javac>
        <copy todir="server/classes">
            <fileset dir="server/src">
                <include name="**/click.xml"/>
            </fileset>
        </copy>
        
     </target>


    <target name="server.compile.generated" >
        <delete dir="server/classes/${root_package}" failonerror="false"/>
        <mkdir dir="server/classes/${root_package}"/>
        <javac destdir="server/classes" debug="on" encoding="UTF-8">
            <src path="server/src/${root_package}"/>
            <classpath>
                <fileset dir="server/lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javac>
    </target>


    <target name="generate" depends="server.compile.environment" >
        <delete dir="generated" failonerror="false"/>
        <mkdir dir="generated"/>

        <java classname="de.ama.generator.Starter" fork="true">
            <classpath>
                <fileset dir="server/lib">
                    <include name="**/*.jar"/>
                </fileset>
                <pathelement location="server/classes"/>
            </classpath>
            <arg value="inFile"/>
            <arg file="server/model/praxis/PraxisSoftware.xml"/>
            <arg value="root_package"/>
            <arg value="${root_package}"/>
            <arg value="targets"/>
            <arg value="flex,java"/>
        </java>
    </target>

    <target name="copy.server.sources" >
        <delete dir="server/src/${root_package}" failonerror="false"/>
        <copy todir="server/src/${root_package}" failonerror="false">
            <fileset dir="generated/java/${root_package}" />
        </copy>
        <copy todir="server/src/${root_package}" overwrite="true" failonerror="false">
            <fileset dir="server/man/${root_package}" />
        </copy>
    </target>

    <target name="copy.client.sources" >
        <delete dir="flex/src/${root_package}" failonerror="false"/>
        <copy todir="flex/src/${root_package}" failonerror="false">
            <fileset dir="generated/flex/${root_package}" />
        </copy>
        <copy todir="flex/src/${root_package}" overwrite="true" failonerror="false">
            <fileset dir="flex/man/${root_package}" />
        </copy>
    </target>

    <target name="server.enhance" >
        <java classname="de.ama.db.tools.Enhancer" fork="true">
            <classpath>
                <fileset dir="server/lib">
                    <include name="**/*.jar"/>
                </fileset>
                <pathelement location="server/classes"/>
            </classpath>
            <arg value="indir"/>
            <arg path="server/classes"/>
            <arg value="verbose"/>
            <arg value="1"/>
        </java>
    </target>
    
<!--
    <target name="deploy" description="deploy to tomcat">
        <copy overwrite="true" todir="${deploy.dir}/WEB-INF/classes">
            <fileset dir="classes">
                <include name="**/**"/>
                <exclude name="generator/**"/>
                <exclude name="logic/**"/>
            </fileset>
        </copy>
        <copy overwrite="false" todir="${deploy.dir}/WEB-INF/lib">
            <fileset dir="lib">
                <include name="**/*.jar"/>
            </fileset>
        </copy>
        <copy overwrite="false" todir="${deploy.dir}/WEB-INF/flex">
            <fileset dir="conf">
                <include name="**/messaging-config.xml"/>
                <include name="**/proxy-config.xml"/>
                <include name="**/remoting-config.xml"/>
                <include name="**/services-config.xml"/>
            </fileset>
        </copy>
        <copy overwrite="false" todir="${deploy.dir}/WEB-INF">
            <fileset dir="conf">
                <include name="**/web.xml"/>
            </fileset>
        </copy>
    </target>
-->

    <!--  ********************************* CLIENT ************************************************* -->


    <taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar"/>



    <target name="client.clean" >
      <delete dir="${deploy.dir}" failonerror="false"/>
      <mkdir dir="${deploy.dir}" />
      <mkdir dir="${deploy.dir}/${app.name}" />
      <mkdir dir="${deploy.dir}/pages/WEB-INF" />
    </target>

    <target name="client.compile" >

        <mxmlc file="flex/src/${app.name}.mxml"
               output="${deploy.dir}/${app.name}/${app.name}.swf"
               debug="false" >

         <compiler.library-path dir="${home.dir}/flex/libs" append="true">
              <!--<include name="hessian-flex-3.1.5.swc" />-->
              <include name="as3corelib.swc" />
              <include name="map_flex_1_16.swc" />
              <include name="flexlib.swc" />
        </compiler.library-path>

        </mxmlc>
    </target>


    <target name="client.wrapper">
        <html-wrapper
                height="100%"
                width="100%"
                template="express-installation"
                bgcolor="0xc0c0c0"
                history="true"
                title="Welcome to ${app.name}"
                file="${app.name}.html"
                application="${app.name}" swf="${app.name}"
                output="${deploy.dir}/${app.name}"/>
    </target>

    <target name="deploy">
        <copy todir="${deploy.dir}/pages">
            <fileset dir="server/src/de/ama/pages">
                <include name="*.htm"/>
            </fileset>
        </copy>
        <copy todir="${deploy.dir}/pages/WEB-INF">
            <fileset dir="server/src/de/ama/pages/WEB-INF"/>
        </copy>
        <copy todir="${deploy.dir}/${app.name}">
            <fileset dir="server/src/de/ama/pages">
                <include name="*.html"/>
                <include name="*.css"/>
                <include name="*.gif"/>
                <include name="*.jpg"/>
                <include name="*.js"/>
                <include name="*.swf"/>
            </fileset>
        </copy>
        <copy todir="${deploy.dir}/${app.name}/static">
            <fileset dir="flex/src/static">
                <include name="**.*"/>
                <exclude name="*.mxml"/>
            </fileset>
        </copy>
    </target>

    <target name="upload">
        <ftp  verbose="yes" passive="yes" depends="yes"
              server="amarow.de" remotedir="/home/ama/flow" userid="ama" password="modrow81732">
            <fileset dir=".">
                <include name="server/bin/server.sh"/>
                <include name="server/bin/schema.sh"/>
                <include name="server/classes/**.**.xml"/>
                <include name="server/classes/**/**.class"/>
                <include name="server/lib/*.*"/>
                <include name="webapp/**/*.*"/>
            </fileset>
        </ftp>
    </target>
    
    <target name="build.server" description="make server " depends="server.compile.environment,generate,copy.server.sources,server.compile.generated,server.enhance,deploy" />
    <target name="build.client" description="make client " depends="client.clean,copy.client.sources,client.compile,client.wrapper" >
        <antcall target="deploy"/>
    </target>
    <target name="build.all" description="make/deploy whole project" depends="build.server,build.client" />


</project>