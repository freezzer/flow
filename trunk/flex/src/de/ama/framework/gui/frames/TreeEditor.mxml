<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" 
	borderColor="#154E76" backgroundColor="#F0F0F0"
	initialize="init()">
	<mx:Script><![CDATA[
		import de.ama.framework.command.SelectionModel;
        import adobe.utils.CustomActions;

        import de.ama.framework.command.Command;
        import de.ama.framework.data.Data;
        import de.ama.framework.gui.icons.IconStore;

        import mx.controls.treeClasses.TreeItemRenderer;
        import mx.core.UITextField;

        public var treeMenu:ContextMenu = new ContextMenu();

        public function init():void
        {
            treeMenu.addEventListener(ContextMenuEvent.MENU_SELECT, contextMenuTriggered);
            treeMenu.hideBuiltInItems();
        }


        [Bindable]
        private var dataTree:TreeNode;

        [Bindable]
        public var selectedNode:Object;

        public function treeChanged(event:Event):void {
            selectedNode = Tree(event.target).selectedItem;
        }

        public function getPrototypeTree():TreeNode {
            return null;
        }

        private function myIconFunction(item:Object):Class {
            var iconClass:Class;
            var iconName:String = item["iconName"];
            return IconStore.getIcon(iconName);
        }

        public function setData(data:Data):void {
            dataTree = getPrototypeTree();
            dataTree.setData(data);
        }


        public function contextMenuTriggered(event:ContextMenuEvent):void
        {
            if (event.mouseTarget is UITextField) {
                var tf:UITextField = UITextField(event.mouseTarget);
                var ir:TreeItemRenderer = TreeItemRenderer(tf.owner);
                var node:TreeNode = TreeNode(ir.data);
                myTree.selectedItem = node;
                var cmis:Array = new Array();
                for each(var command:Command in node.commands) {
                    var cmi:ContextMenuItem = new ContextMenuItem(command.label);
                    command.contextMenuItem = cmi;
                    cmi.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, menuItemSelectHandler);
                    cmis.push(cmi);
                }
                treeMenu.customItems = cmis;
            }
        }

        private function menuItemSelectHandler(event:ContextMenuEvent):void {
                var tf:UITextField = UITextField(event.mouseTarget);
                var ir:TreeItemRenderer = TreeItemRenderer(tf.owner);
                var node:TreeNode = TreeNode(ir.data);
                for each(var command:Command in node.commands) {
                    if(command.contextMenuItem == event.target){
                       command.context.selectionModel = new SelectionModel(node.data);
                       command.context.invoker=node;
                       command.execute();                   	
                    }
                }
            
        }


        ]]></mx:Script>

    <mx:VBox width="100%" height="100%" paddingBottom="1" paddingRight="1" paddingLeft="1" paddingTop="4">
    <mx:HDividedBox color="0xffffff" width="100%" height="100%" paddingBottom="1" paddingRight="1" paddingLeft="1" paddingTop="1" horizontalGap="8">

            <mx:Tree id="myTree" width="20%" height="100%" 
            	labelField="label" iconFunction="myIconFunction"
                showRoot="true" dataProvider="{dataTree}" change="treeChanged(event)"
                fontWeight="normal" borderStyle="solid" borderThickness="2" color="#7A858D" cornerRadius="4" 
                contextMenu="{treeMenu}"
				/>

            <mx:TextArea height="100%" width="80%"  text="Selected Item: {selectedNode}" color="#6F7884" backgroundAlpha="1.0" borderStyle="solid" cornerRadius="4" borderThickness="2"/>

    </mx:HDividedBox>
    </mx:VBox>
</mx:Canvas>
