<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
                layout="absolute" width="332" height="260"
                title="Suche" showCloseButton="true"
                backgroundColor="#C0C0C0"
                close="close()"
                cornerRadius="4"
                keyUp="keyHandler(event)"
                creationComplete="init()"
         xmlns:ns1="de.ama.framework.gui.frames.*"
        >

    <mx:Script><![CDATA[
    	import de.ama.framework.command.MenuInvoker;
    	import de.ama.framework.command.CallbackCommand;
    	import de.ama.framework.command.Invoker;
    	import de.ama.framework.gui.fields.CommandButton;
        import de.ama.framework.data.BoReference;
        import de.ama.framework.data.SelectionModel;
        import de.ama.framework.util.Callback;
        import de.ama.services.Factory;

        import mx.managers.PopUpManager;

        private var _listpane:ListPanel;
        private var _lister:String = "default";

        private var _callback:Callback = null;
        private var _boRef:BoReference = null;

        public function setCallback(cb:Callback):void {
            _callback = cb;
        }

        private function callback():void {
            if (_callback != null) {
                _callback.execute(this);
            }
        }

        public function init():void {
        	buttons.size = CommandButton.LARGE;
        	buttons.invoker = new MenuInvoker();
        	buttons.addCommand(new CallbackCommand("Übernehmen","accept",new Callback(this,okButtonHandler)));
        	buttons.addCommand(new CallbackCommand("Schließen","cancel",new Callback(this,close)));
        	focusManager.setFocus(input);
        }

        public function close(inv:Invoker=null):void {
            PopUpManager.removePopUp(this);
            callback();
        }

        public function keyHandler(e:KeyboardEvent):void {
        	if(e.keyCode == Keyboard.ESCAPE){
        		close();
        	}
        	if(e.keyCode == Keyboard.ENTER){
        		okButtonHandler();
        	}
        }

        public function inputHandler(e:Event):void {
        }

        private function onListDoubleClick(lp:ListPanel):void {
            okButtonHandler();
        }

        private function okButtonHandler(inv:Invoker=null):void {
            var sm:SelectionModel = getListPanel().getSelectionModel();
            _boRef = sm.getFirstSelection();
            close();
        }

        public function geLister():String {
            return _lister;
        }

        public function setLister(value:String):void {
            _lister = value;
        }

        public function get selection():BoReference {
            return _boRef;
        }

        public function getListPanel():ListPanel {
            if (_listpane == null) {
                _listpane = Factory.createLister(_lister);
            }
            if(cp.getChildren().length<3){
                _listpane.doubleClickCallback = new Callback(this, onListDoubleClick);
                cp.addChildAt(_listpane, 1);
            }
            return _listpane;
        }


        public function setListPanel(lp:ListPanel):void {
            _listpane = lp;
        }

        public function reload():void{
            getListPanel().reload();
        }
        
        ]]></mx:Script>


    <mx:VBox id="cp" width="100%" verticalGap="1" verticalAlign="bottom" height="100%">
        <mx:TextInput width="100%" id="input" change="inputHandler(event)"/>
        <ns1:CommandButtonBar id="buttons"/>
    </mx:VBox>

</mx:TitleWindow>
